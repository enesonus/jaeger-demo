name: ci

on:
  push:
    branches:
      - "main"
  workflow_dispatch: {}

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - dockerfile: ./cmd/public/Dockerfile
            name: public
          - dockerfile: ./cmd/service-artist/Dockerfile
            name: service-artist
          - dockerfile: ./cmd/service-price/Dockerfile
            name: service-price
          - dockerfile: ./cmd/service-title/Dockerfile
            name: service-title
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Prepare metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/enesonus/jaeger-demo-${{ matrix.name }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Build and push images
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Build and push the chart
        uses: appany/helm-oci-chart-releaser@v0.3.0
        with:
          name: jaeger-demo-chart
          registry: ghcr.io
          repository: enesonus/jaeger-demo
          tag: ${{ steps.meta.outputs.tags }}
          path: cluster/charts/jaeger-eonus
          registry_username: ${{ github.repository_owner }}
          registry_password: ${{ secrets.GITHUB_TOKEN }}
